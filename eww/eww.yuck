(defpoll wifistat :interval "1s"
"scripts/wifi main")

(defpoll wifistat2 :interval "1s"
"scripts/wifi tooltip")

(defpoll brightness :interval "1s" 
"scripts/bright")

(defpoll vol :interval "1s"
"scripts/getvol")

(defpoll getmedia :interval "1s"
"scripts/getmedia short")

(defpoll getmediafull :interval "1s"
"scripts/getmedia full")

(defpoll time :interval "1s"
"date '+%A, %B %d [ %H:%M:%S ]'")

(defpoll battstatus :interval "1s"
"scripts/battery battstatus")

(defpoll battprcnt :interval "1s"
"scripts/battery battprcnt")

(defpoll playpause :interval "1s"
"scripts/music")

(defpoll activeworkspace :interval "1s"
"scripts/workspaces")

;;=================================================================;;
;;===================		Bar		===================;;
;;=================================================================;;

(defwindow bar
:monitor 0
:exclusive true
:wm-ignore true
:stacking "bg"
:geometry (geometry :x "0px" :y "8px" :width "1900px" :height "38px" :anchor "top center")
	(widgets))

(defwidget widgets []
(box :space-evenly false :hexpand false :spacing 5 :class "widgets"
	(widgets_left)
	(widgets_right)))

(defwidget widgets_left []
(box :orientation "h" :space-evenly false :hexpand true :spacing 5
	(left)
	(musictrl)
	(music)))

(defwidget widgets_right []
(box :orientation "h" :space-evenly false :hexpand false :spacing 5
	(metrics)
	(wifi)
	(right)))

(defwidget right []
	(box :class "time" :orientation "h" :hexpand false
	time))

(defwidget metrics []
	(box :class "metrics" :hexpand false :space-evenly false :spacing 15
		(label :text "${vol}" :tooltip "Volume")
		(label :text "${brightness}" :tooltip "Brightness")
		(label :text " ${round(EWW_CPU.avg, 0)}%" :tooltip "CPU Usage")
		(label :text " ${round(EWW_RAM.used_mem_perc, 0)}%" :tooltip "RAM Usage")
		(label :text "${battstatus} ${battprcnt}" :tooltip "Battery")))

(defwidget wifi []
	(box :class "wifi" :hexpand false
		(label :text "${wifistat}" :tooltip "${wifistat2}")))

(defwidget musictrl []
	(box :class "msctrl" :spacing 15 :space-evenly true
		(button :onclick "playerctl previous" "")
		(button :onclick "playerctl play-pause" "${playpause}")
		(button :onclick "playerctl next" "")))

(defwidget music []
	(box :class "music" :orientation "h" :hexpand "true"
		(label :text "${getmedia}" :tooltip "${getmediafull}")))

(defwidget left []
	(box :class "menu" :orientation "h" :space-evenly true :hexpand "false" :spacing 15
		(button :onclick "eww open bar2" "󰐦")))

;;=================================================================;;
;;===================	       powerconf	===================;;
;;=================================================================;;

(defwindow bar2
:monitor 0
:wm-ignore true
:stacking "fg"
:geometry (geometry :x "0px" :y "0px" :width "300px" :height "200px" :anchor "center")
	(powerconf))

(defwidget powerconf []
	(box :class "powerconf"
	(powerbox)))

(defwidget powerbox []
	(box :class "powerbox" :orientation "v" :vexpand true :hexpand false :valign "center"
	(label :text "Power Menu" :style "font-size: 22px;")
		(box :class "splitter" :orientation "v" :vexpand true :valign "center" (children :nth 0)
		(box :class "pwrbuttons" :orientation "h" :space-evenly false :hexpand false :halign "center" :spacing 25
			(button :class "poff" :onclick "poweroff" "󰐥")
			(button :class "rbtt" :onclick "reboot" "󰑙")
			(button :class "cncl" :onclick "eww close bar2" "󰑏")))))
